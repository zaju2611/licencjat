"use strict";var _firebaseApp=require("https://www.gstatic.com/firebasejs/9.17.1/firebase-app.js"),_firebaseAuth=require("https://www.gstatic.com/firebasejs/9.17.1/firebase-auth.js"),_firebaseDatabase=require("https://www.gstatic.com/firebasejs/9.17.1/firebase-database.js"),app=(0,_firebaseApp.initializeApp)(firebaseConfig),db=(0,_firebaseDatabase.getDatabase)(app),auth=(0,_firebaseAuth.getAuth)(),password=document.querySelector("#password"),email=document.querySelector("#mail"),sendBtn=document.querySelector(".login"),error=document.querySelector(".error-text"),closeBtn=document.querySelector(".close"),signin=document.querySelector(".sign-in"),signout=document.querySelector(".sign-out"),results=document.querySelector(".results"),showErr=function(e,t){var e=e.parentElement,r=e.querySelector(".error-text");e.classList.add("error"),r.textContent=t};sendBtn.addEventListener("click",function(e){e.preventDefault(),(0,_firebaseAuth.signInWithEmailAndPassword)(auth,email.value,password.value).then(function(e){var t=e.user,e=new Date;(0,_firebaseDatabase.update)((0,_firebaseDatabase.ref)(db,"users/"+t.uid),{last_login:e}).then(function(){email.value="",password.value="",error.style.visibility="hidden",sessionStorage.setItem("user",JSON.stringify(t)),location.href="http://localhost:3000/index.html"}).catch(function(e){alert("error "+e)})}).catch(function(e){showErr(email,"Użytkownik nie istnieje")})}),signout.addEventListener("click",function(e){e.preventDefault(),(0,_firebaseAuth.signOut)(auth).then(function(){sessionStorage.removeItem("user"),location.href="http://localhost:3000/index.html"}).catch(function(e){alert("błąd przy wylogowywaniu")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmpzIl0sIm5hbWVzIjpbIl9maXJlYmFzZUFwcCIsInJlcXVpcmUiLCJfZmlyZWJhc2VBdXRoIiwiX2ZpcmViYXNlRGF0YWJhc2UiLCJzaWdub3V0IiwiaW5pdGlhbGl6ZUFwcCIsInF1ZXJ5U2VsZWN0b3IiLCJyZXN1bHRzIiwiZ2V0RGF0YWJhc2UiLCJzaG93RXJyIiwiZ2V0QXV0aCIsImVycm9yTXNnIiwiZm9ybUJveCIsImNsYXNzTGlzdCIsInRleHRDb250ZW50IiwibXNnIiwiZXJyb3IiLCJkb2N1bWVudCIsInNlbmRCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwicHJldmVudERlZmF1bHQiLCJzaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZCIsImF1dGgiLCJpbnB1dCIsIkRhdGUiLCJwYXJlbnRFbGVtZW50IiwidXBkYXRlIiwicmVmIiwibGFzdF9sb2dpbiIsImxnRGF0ZSIsInRoZW4iLCJ2aXNpYmlsaXR5IiwiZSIsInNlc3Npb25TdG9yYWdlIiwiZW1haWwiLCJ2YWx1ZSIsInBhc3N3b3JkIiwidXNlckNyZWRlbnRpYWwiLCJ1c2VyIiwiZGIiLCJ1aWQiLCJzaWduT3V0IiwicmVtb3ZlSXRlbSIsImxvY2F0aW9uIiwic2V0SXRlbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJhbGVydCIsImhyZWYiXSwibWFwcGluZ3MiOiJhQUFBLElBQUFBLGFBQUFDLFFBQUEsMkRBQUEsRUFDQUMsY0FBQUQsUUFBQSw0REFBQSxFQWVBRSxrQkFBQUYsUUFBQSxnRUFBQSxFQVFNRyxLQUFPLEVBQUFDLGFBQUFBLGVBQVlDLGNBQWMsRUFDakNDLElBQU8sRUFBQUMsa0JBQUFBLGFBQVlGLEdBQUFBLEVBRW5CRyxNQUFPLEVBQUFDLGNBQUFBLFNBQUcsRUFFVEMsU0FBV0MsU0FBUU4sY0FBYyxXQUFBLEVBQ3ZDTSxNQUFRQyxTQUFhUCxjQUFTLE9BQUEsRUFDOUJLLFFBQVNHLFNBQWNDLGNBQUcsUUFBQSxFQUMxQkMsTUFBQUMsU0FBQVgsY0FBQSxhQUFBLEVBRURZLFNBQVFDLFNBQWlCYixjQUFTLFFBQU8sRUFDdENjLE9BQUFBLFNBQWdCZCxjQUFBLFVBQUEsRUFDbEJlLFFBQUFBLFNBQUFBLGNBQUFBLFdBQTJCQyxFQUV6QmYsUUFBQVUsU0FBQVgsY0FBQSxVQUFBLEVBRUFHLFFBQVksU0FBR2MsRUFBSUMsR0FackIsSUFhRVosRUFBQVcsRUFBQUUsY0FDQWQsRUFBQWUsRUFBQUEsY0FBT0MsYUFBQUEsRUFaVGYsRUFhR2dCLFVBQVlDLElBQUFBLE9BQUFBLEVBWmZsQixFQWNJbUIsWUFBV2YsQ0FiaEIsRUFFQUcsUUFjS0YsaUJBQVllLFFBQWEsU0FBQUMsR0FiN0JBLEVBQUVaLGVBY0VhLEdBYkosRUFBQVosY0FBQUEsNEJBY29CQyxLQUFBWSxNQUFBQyxNQUFBQyxTQUFrQ0QsS0FBQSxFQWJwREwsS0FjRyxTQUFBTyxHQVpILElBZUdDLEVBQUFELEVBQUFDLEtBQ0ZULEVBQ0ssSUFBQUwsTUFFTixFQUFBRSxrQkFBQUEsU0FBQyxFQUFBQyxrQkFBQUEsS0FBQVksR0FBQSxTQUFBRCxFQUFBRSxHQUFBLEVBQUEsQ0FDRlosV0FBQUMsQ0FFRnpCLENBQUFBLEVBQ0dnQixLQUFBQSxXQUNGYyxNQUFBTyxNQUFBQSxHQUVFUixTQUFBQSxNQUFlUyxHQUNmQyxNQUFBQSxNQUFhWixXQUFHLFNBQ2ZFLGVBQ0tXLFFBQUM1QixPQUFVNkIsS0FBQUMsVUFBQVIsQ0FBQSxDQUFBLEVBQ2pCUyxTQUFNQyxLQUFBLGtDQUNMLENBQUEsRUFBQSxNQUNGLFNBQUFoQyxHQWxCRytCLE1BQU0sU0FBVy9CLENBQUssQ0FDdkIsQ0FBQyxDQUNILENBQUMsRUFBQyxNQUNLLFNBQUNBLEdBQ1BQLFFBQVF5QixNQUFPLHlCQUF5QixDQUN6QyxDQUFDLENBQ0gsQ0FBQyxFQUVEOUIsUUFBUWUsaUJBQWlCLFFBQVMsU0FBQ2EsR0FDbENBLEVBQUVaLGVBQWMsR0FDaEIsRUFBQXFCLGNBQUFBLFNBQVFuQixJQUFJLEVBQ1ZRLEtBQUssV0FDTEcsZUFBZVMsV0FBVyxNQUFNLEVBQ2hDQyxTQUFTSyxLQUFPLGtDQUNqQixDQUFDLEVBQUMsTUFDSyxTQUFDaEMsR0FDUCtCLE1BQU0seUJBQXlCLENBQ2hDLENBQUMsQ0FDSCxDQUFDIiwiZmlsZSI6ImxvZ2luLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5pdGlhbGl6ZUFwcCB9IGZyb20gXCJodHRwczovL3d3dy5nc3RhdGljLmNvbS9maXJlYmFzZWpzLzkuMTcuMS9maXJlYmFzZS1hcHAuanNcIjtcclxuaW1wb3J0IHtcclxuXHRnZXRBdXRoLFxyXG5cdHNpZ25JbldpdGhFbWFpbEFuZFBhc3N3b3JkLFxyXG5cdHNpZ25PdXQsXHJcblx0b25BdXRoU3RhdGVDaGFuZ2VkLFxyXG59IGZyb20gXCJodHRwczovL3d3dy5nc3RhdGljLmNvbS9maXJlYmFzZWpzLzkuMTcuMS9maXJlYmFzZS1hdXRoLmpzXCI7XHJcbmltcG9ydCB7XHJcblx0Z2V0RGF0YWJhc2UsXHJcblx0c2V0LFxyXG5cdHJlZixcclxuXHR1cGRhdGUsXHJcbn0gZnJvbSBcImh0dHBzOi8vd3d3LmdzdGF0aWMuY29tL2ZpcmViYXNlanMvOS4xNy4xL2ZpcmViYXNlLWRhdGFiYXNlLmpzXCI7XHJcblxyXG5jb25zdCBhcHAgPSBpbml0aWFsaXplQXBwKGZpcmViYXNlQ29uZmlnKTtcclxuY29uc3QgZGIgPSBnZXREYXRhYmFzZShhcHApO1xyXG5jb25zdCBhdXRoID0gZ2V0QXV0aCgpO1xyXG5cclxuY29uc3QgcGFzc3dvcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Bhc3N3b3JkXCIpO1xyXG5jb25zdCBlbWFpbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWFpbFwiKTtcclxuY29uc3Qgc2VuZEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubG9naW5cIik7XHJcbmNvbnN0IGVycm9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lcnJvci10ZXh0XCIpO1xyXG5jb25zdCBjbG9zZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2xvc2VcIik7XHJcbmNvbnN0IHNpZ25pbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2lnbi1pblwiKTtcclxuY29uc3Qgc2lnbm91dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2lnbi1vdXRcIik7XHJcbmNvbnN0IHJlc3VsdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJlc3VsdHNcIik7XHJcblxyXG5jb25zdCBzaG93RXJyID0gKGlucHV0LCBtc2cpID0+IHtcclxuXHRjb25zdCBmb3JtQm94ID0gaW5wdXQucGFyZW50RWxlbWVudDtcclxuXHRjb25zdCBlcnJvck1zZyA9IGZvcm1Cb3gucXVlcnlTZWxlY3RvcihcIi5lcnJvci10ZXh0XCIpO1xyXG5cdGZvcm1Cb3guY2xhc3NMaXN0LmFkZChcImVycm9yXCIpO1xyXG5cdGVycm9yTXNnLnRleHRDb250ZW50ID0gbXNnO1xyXG59O1xyXG5cclxuc2VuZEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuXHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0c2lnbkluV2l0aEVtYWlsQW5kUGFzc3dvcmQoYXV0aCwgZW1haWwudmFsdWUsIHBhc3N3b3JkLnZhbHVlKVxyXG5cdFx0LnRoZW4oKHVzZXJDcmVkZW50aWFsKSA9PiB7XHJcblx0XHRcdC8vIFNpZ25lZCBpblxyXG5cdFx0XHRjb25zdCB1c2VyID0gdXNlckNyZWRlbnRpYWwudXNlcjtcclxuXHRcdFx0Y29uc3QgbGdEYXRlID0gbmV3IERhdGUoKTtcclxuXHRcdFx0Ly8gLi4uXHJcblx0XHRcdHVwZGF0ZShyZWYoZGIsIFwidXNlcnMvXCIgKyB1c2VyLnVpZCksIHtcclxuXHRcdFx0XHRsYXN0X2xvZ2luOiBsZ0RhdGUsXHJcblx0XHRcdH0pXHJcblx0XHRcdFx0LnRoZW4oKCkgPT4ge1xyXG5cdFx0XHRcdFx0ZW1haWwudmFsdWUgPSBcIlwiO1xyXG5cdFx0XHRcdFx0cGFzc3dvcmQudmFsdWUgPSBcIlwiO1xyXG5cdFx0XHRcdFx0ZXJyb3Iuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XHJcblx0XHRcdFx0XHRzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFwidXNlclwiLCBKU09OLnN0cmluZ2lmeSh1c2VyKSk7XHJcblx0XHRcdFx0XHRsb2NhdGlvbi5ocmVmID0gXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvaW5kZXguaHRtbFwiO1xyXG5cdFx0XHRcdH0pXHJcblx0XHRcdFx0LmNhdGNoKChlcnJvcikgPT4ge1xyXG5cdFx0XHRcdFx0YWxlcnQoXCJlcnJvciBcIiArIGVycm9yKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdH0pXHJcblx0XHQuY2F0Y2goKGVycm9yKSA9PiB7XHJcblx0XHRcdHNob3dFcnIoZW1haWwsIFwiVcW8eXRrb3duaWsgbmllIGlzdG5pZWplXCIpO1xyXG5cdFx0fSk7XHJcbn0pO1xyXG5cclxuc2lnbm91dC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuXHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0c2lnbk91dChhdXRoKVxyXG5cdFx0LnRoZW4oKCkgPT4ge1xyXG5cdFx0XHRzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKFwidXNlclwiKTtcclxuXHRcdFx0bG9jYXRpb24uaHJlZiA9IFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL2luZGV4Lmh0bWxcIjtcclxuXHRcdH0pXHJcblx0XHQuY2F0Y2goKGVycm9yKSA9PiB7XHJcblx0XHRcdGFsZXJ0KFwiYsWCxIVkIHByenkgd3lsb2dvd3l3YW5pdVwiKTtcclxuXHRcdH0pO1xyXG59KTtcclxuIl19
